name: Code Coverage
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['7.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install pytest pytest-cov coverage
        pip install -r requirements.txt

    - name: Cleanup MongoDB container
      run: |
        if [ "$(docker ps -aq -f name=mongodb)" ]; then
          docker rm -f mongodb || true
        fi

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Run the tests and collect coverage
      run: |
        # Start the application in the background
        python application.py &
        app_pid=$!

        # Allow application time to initialize
        sleep 5

        # Run tests and collect coverage in the background
        echo "Running tests..."
        coverage run -m unittest tests.test_module > test_output.log 2>&1 &
        coverage_pid=$!

        # Allow tests to run for a maximum of 60 seconds
        sleep 60

        # Check if the coverage process is still running
        if ps -p $coverage_pid > /dev/null; then
          echo "Tests are taking too long. Terminating..."
          kill $coverage_pid
          exit_code=1
        else
          wait $coverage_pid
          exit_code=$?
        fi

        # Generate reports if tests finished successfully
        if [ $exit_code -eq 0 ]; then
          coverage xml -i
          coverage report -m
        else
          echo "Tests failed. Check the log below:"
        fi

        # Print test output log
        cat test_output.log

        # Stop the application
        kill $app_pid || true

        exit $exit_code
